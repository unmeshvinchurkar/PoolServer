<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.pool.spring.model.GeoPoint" table="points">
		<id name="pointId" type="java.lang.Long">
			<column name="pointId" length="100" />
			<generator class="increment" />
		</id>
		<property name="latitude" type="java.lang.Double">
			<column name="latitude" not-null="true" />
		</property>
		<property name="longitude" type="java.lang.Double">
			<column name="longitude" not-null="true" />
		</property>
		<property name="pointOrder" type="int">
			<column name="Point_order" not-null="true" />
		</property>
		<property name="carPoolId" type="java.lang.Long">
			<column name="car_pool_id" not-null="true" />
		</property>
		<property name="approxTimeToReach" type="java.lang.Long">
			<column name="approx_time_to_reach" not-null="true" />
		</property>
		<property name="distanceToReach" type="java.lang.Long">
			<column name="distance_to_reach" not-null="true" />
		</property>
	</class>

	<query name="fetchPoints">
        <![CDATA[from com.pool.spring.model.GeoPoint point1 where 
        (point1.longitude < (:maxLongitude) 
           and point1.longitude > (:minLongitude)   
           and point1.latitude > (:minLattitude) 
           and point1.latitude <(:maxLattitude) 
           and point1.carPoolId in (:carPoolIds))
           and point1.approxTimeToReach > (:minPickUpTime)  
           and point1.approxTimeToReach < (:maxPickUpTime)
           
           ]]>
	</query>
</hibernate-mapping>
